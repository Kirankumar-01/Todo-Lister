{"ast":null,"code":"var _jsxFileName = \"/home/kirankumar/Desktop/Kiran/basics/React/todo-list/src/Component/Todo.jsx\";\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPen, faTrashCan } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Todo = _ref => {\n  let {\n    todos,\n    setUpdateData,\n    de\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: todos && todos.sort((a, b) => a.id > b.id ? 1 : -1).map((task, index) => {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col taskBg\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: task.status ? 'done' : '',\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"taskNumber\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"taskText\",\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"iconsWrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"Edit\",\n              onClick: () => setUpdateData({\n                id: task.id,\n                title: task.title,\n                status: task.status ? true : false\n              }),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faPen\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"Delete\",\n              onClick: () => deleteTask(task.id),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faTrashCan\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 15\n        }, this)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","FontAwesomeIcon","faPen","faTrashCan","Todo","todos","setUpdateData","de","sort","a","b","id","map","task","index","status","title","deleteTask"],"sources":["/home/kirankumar/Desktop/Kiran/basics/React/todo-list/src/Component/Todo.jsx"],"sourcesContent":["import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport{\n  faPen, faTrashCan\n} from '@fortawesome/free-solid-svg-icons'\nconst Todo = ({ todos, setUpdateData, de}) => {\n  return (\n    <div>\n       {todos && todos\n        .sort((a,b) => a.id > b.id ?1 : -1)\n        .map((task, index)=> {\n          return(\n            <React.Fragment key={task.id}>\n              <div className='col taskBg'>\n                <div className={task.status ? 'done': ''}>\n                  <span className='taskNumber'>{index + 1}</span>\n                  <span className='taskText'>{task.title}</span>\n                </div>\n                <div className='iconsWrap'>\n                  <span title='Edit' onClick={()=> setUpdateData({ id: task.id, title: task.title, status: task.status? true:false })} >\n                    <FontAwesomeIcon icon={faPen} />\n                  </span>\n                  <span title='Delete' onClick={()=>deleteTask(task.id)} >\n                    <FontAwesomeIcon icon={faTrashCan} />\n                  </span>\n                </div>\n\n\n              </div>\n              \n            </React.Fragment>\n          )\n        })\n      }\n    </div>\n  )\n}\n\nexport default Todo\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SACEC,KAAK,EAAEC,UAAU,QACZ,mCAAmC;AAAA;AAC1C,MAAMC,IAAI,GAAG,QAAiC;EAAA,IAAhC;IAAEC,KAAK;IAAEC,aAAa;IAAEC;EAAE,CAAC;EACvC,oBACE;IAAA,UACIF,KAAK,IAAIA,KAAK,CACbG,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAKD,CAAC,CAACE,EAAE,GAAGD,CAAC,CAACC,EAAE,GAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAClCC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAI;MACnB,oBACE,QAAC,KAAK,CAAC,QAAQ;QAAA,uBACb;UAAK,SAAS,EAAC,YAAY;UAAA,wBACzB;YAAK,SAAS,EAAED,IAAI,CAACE,MAAM,GAAG,MAAM,GAAE,EAAG;YAAA,wBACvC;cAAM,SAAS,EAAC,YAAY;cAAA,UAAED,KAAK,GAAG;YAAC;cAAA;cAAA;cAAA;YAAA,QAAQ,eAC/C;cAAM,SAAS,EAAC,UAAU;cAAA,UAAED,IAAI,CAACG;YAAK;cAAA;cAAA;cAAA;YAAA,QAAQ;UAAA;YAAA;YAAA;YAAA;UAAA,QAC1C,eACN;YAAK,SAAS,EAAC,WAAW;YAAA,wBACxB;cAAM,KAAK,EAAC,MAAM;cAAC,OAAO,EAAE,MAAKV,aAAa,CAAC;gBAAEK,EAAE,EAAEE,IAAI,CAACF,EAAE;gBAAEK,KAAK,EAAEH,IAAI,CAACG,KAAK;gBAAED,MAAM,EAAEF,IAAI,CAACE,MAAM,GAAE,IAAI,GAAC;cAAM,CAAC,CAAE;cAAA,uBAClH,QAAC,eAAe;gBAAC,IAAI,EAAEb;cAAM;gBAAA;gBAAA;gBAAA;cAAA;YAAG;cAAA;cAAA;cAAA;YAAA,QAC3B,eACP;cAAM,KAAK,EAAC,QAAQ;cAAC,OAAO,EAAE,MAAIe,UAAU,CAACJ,IAAI,CAACF,EAAE,CAAE;cAAA,uBACpD,QAAC,eAAe;gBAAC,IAAI,EAAER;cAAW;gBAAA;gBAAA;gBAAA;cAAA;YAAG;cAAA;cAAA;cAAA;YAAA,QAChC;UAAA;YAAA;YAAA;YAAA;UAAA,QACH;QAAA;UAAA;UAAA;UAAA;QAAA;MAGF,GAhBaU,IAAI,CAACF,EAAE;QAAA;QAAA;QAAA;MAAA,QAkBX;IAErB,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QAEA;AAEV,CAAC;AAAA,KA/BKP,IAAI;AAiCV,eAAeA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}